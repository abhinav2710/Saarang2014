/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.saarang;

public final class R {
    public static final class anim {
        public static final int slide_left_in=0x7f040000;
        public static final int slide_left_out=0x7f040001;
    }
    public static final class attr {
        /** 
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
         */
        public static final int alignmentMode=0x7f010004;
        /**  The maximum number of columns to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnCount=0x7f010002;
        /** 
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int columnOrderPreserved=0x7f010006;
        /** 
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_column=0x7f010009;
        /** 
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_columnSpan=0x7f01000a;
        /** 
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int layout_gravity=0x7f01000b;
        /**  END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_row=0x7f010007;
        /** 
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_rowSpan=0x7f010008;
        /** 
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
         */
        public static final int orientation=0x7f010000;
        /**  The maximum number of rows to create when automatically positioning children. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowCount=0x7f010001;
        /** 
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowOrderPreserved=0x7f010005;
        /** 
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int useDefaultMargins=0x7f010003;
    }
    public static final class dimen {
        public static final int IconBotPadding=0x7f06000b;
        public static final int IconDescriptionHeight=0x7f06000c;
        public static final int IconDescriptionWidth=0x7f06000a;
        public static final int IconHeigth=0x7f060009;
        public static final int IconLayoutHeight=0x7f060007;
        public static final int IconWidth=0x7f060008;
        public static final int ProShowbuttonWidth=0x7f060003;
        public static final int SponsPicHeight=0x7f060005;
        public static final int buttonHeight=0x7f060004;
        public static final int buttonWidth=0x7f060002;
        /**  The default gap between components in a layout. 
         */
        public static final int default_gap=0x7f060000;
        public static final int dip=0x7f060001;
        public static final int mainWidth=0x7f060006;
    }
    public static final class drawable {
        public static final int anathema=0x7f020000;
        public static final int back=0x7f020001;
        public static final int backday=0x7f020002;
        public static final int backdayhighlight=0x7f020003;
        public static final int background=0x7f020004;
        public static final int background_gallery=0x7f020005;
        public static final int bdance=0x7f020006;
        public static final int bfine=0x7f020007;
        public static final int blecdems=0x7f020008;
        public static final int blit=0x7f020009;
        public static final int blue=0x7f02000a;
        public static final int bluebutton=0x7f02000b;
        public static final int bluering=0x7f02000c;
        public static final int bmusic=0x7f02000d;
        public static final int bothers=0x7f02000e;
        public static final int bquizzing=0x7f02000f;
        public static final int bspeaking=0x7f020010;
        public static final int bthespian=0x7f020011;
        public static final int bunwind=0x7f020012;
        public static final int choreo=0x7f020013;
        public static final int classical=0x7f020014;
        public static final int dance=0x7f020015;
        public static final int dance_events=0x7f020016;
        public static final int dance_events1=0x7f020017;
        public static final int dance_events2=0x7f020018;
        public static final int dance_events3=0x7f020019;
        public static final int dance_events4=0x7f02001a;
        public static final int dance_events5=0x7f02001b;
        public static final int dance_events6=0x7f02001c;
        public static final int event_page_bottom=0x7f02001d;
        public static final int event_page_button1=0x7f02001e;
        public static final int event_page_button2=0x7f02001f;
        public static final int event_page_header=0x7f020020;
        public static final int exhi=0x7f020021;
        public static final int finearts=0x7f020022;
        public static final int finearts_event=0x7f020023;
        public static final int finearts_event1=0x7f020024;
        public static final int finearts_event2=0x7f020025;
        public static final int finearts_event3=0x7f020026;
        public static final int finearts_event4=0x7f020027;
        public static final int finearts_event5=0x7f020028;
        public static final int finearts_event6=0x7f020029;
        public static final int finearts_event7=0x7f02002a;
        public static final int finearts_event8=0x7f02002b;
        public static final int finearts_event9=0x7f02002c;
        public static final int gallery_selected_default=0x7f02002d;
        public static final int gradient=0x7f02002e;
        public static final int gradient2=0x7f02002f;
        public static final int gradient3=0x7f020030;
        public static final int greenring=0x7f020031;
        public static final int hospi=0x7f020032;
        public static final int ic_launcher=0x7f020033;
        public static final int icon=0x7f020034;
        public static final int lecdems=0x7f020035;
        public static final int lecdems_events1=0x7f020036;
        public static final int lecdems_events2=0x7f020037;
        public static final int lit=0x7f020038;
        public static final int lit_events1=0x7f020039;
        public static final int lit_events2=0x7f02003a;
        public static final int lit_events3=0x7f02003b;
        public static final int lit_events4=0x7f02003c;
        public static final int location=0x7f02003d;
        public static final int mapicon=0x7f02003e;
        public static final int more=0x7f02003f;
        public static final int music=0x7f020040;
        public static final int music_events=0x7f020041;
        public static final int music_events1=0x7f020042;
        public static final int music_events10=0x7f020043;
        public static final int music_events2=0x7f020044;
        public static final int music_events3=0x7f020045;
        public static final int music_events4=0x7f020046;
        public static final int music_events5=0x7f020047;
        public static final int music_events6=0x7f020048;
        public static final int music_events7=0x7f020049;
        public static final int music_events8=0x7f02004a;
        public static final int music_events9=0x7f02004b;
        public static final int namaskar=0x7f02004c;
        public static final int nxg=0x7f02004d;
        public static final int online_events=0x7f02004e;
        public static final int orangering=0x7f02004f;
        public static final int other_events1=0x7f020050;
        public static final int other_events2=0x7f020051;
        public static final int other_events3=0x7f020052;
        public static final int other_events4=0x7f020053;
        public static final int other_events5=0x7f020054;
        public static final int other_events6=0x7f020055;
        public static final int others=0x7f020056;
        public static final int pin=0x7f020057;
        public static final int popularnight=0x7f020058;
        public static final int proshow1=0x7f020059;
        public static final int proshow2=0x7f02005a;
        public static final int proshow3=0x7f02005b;
        public static final int proshow4=0x7f02005c;
        public static final int quizzing=0x7f02005d;
        public static final int quizzing_events=0x7f02005e;
        public static final int quizzing_events1=0x7f02005f;
        public static final int quizzing_events2=0x7f020060;
        public static final int quizzing_events3=0x7f020061;
        public static final int quizzing_events4=0x7f020062;
        public static final int quizzing_events5=0x7f020063;
        public static final int quizzing_events6=0x7f020064;
        public static final int red=0x7f020065;
        public static final int round=0x7f020066;
        public static final int round_selected=0x7f020067;
        public static final int saaranglogo=0x7f020068;
        public static final int saarangtheme1=0x7f020069;
        public static final int speaking=0x7f02006a;
        public static final int speaking_events=0x7f02006b;
        public static final int speaking_events1=0x7f02006c;
        public static final int speaking_events2=0x7f02006d;
        public static final int speaking_events3=0x7f02006e;
        public static final int spons=0x7f02006f;
        public static final int spons1=0x7f020070;
        public static final int spons10=0x7f020071;
        public static final int spons11=0x7f020072;
        public static final int spons12=0x7f020073;
        public static final int spons13=0x7f020074;
        public static final int spons14=0x7f020075;
        public static final int spons15=0x7f020076;
        public static final int spons16=0x7f020077;
        public static final int spons17=0x7f020078;
        public static final int spons18=0x7f020079;
        public static final int spons19=0x7f02007a;
        public static final int spons2=0x7f02007b;
        public static final int spons20=0x7f02007c;
        public static final int spons21=0x7f02007d;
        public static final int spons22=0x7f02007e;
        public static final int spons23=0x7f02007f;
        public static final int spons24=0x7f020080;
        public static final int spons25=0x7f020081;
        public static final int spons3=0x7f020082;
        public static final int spons4=0x7f020083;
        public static final int spons5=0x7f020084;
        public static final int spons6=0x7f020085;
        public static final int spons7=0x7f020086;
        public static final int spons8=0x7f020087;
        public static final int spons9=0x7f020088;
        public static final int sunburn=0x7f020089;
        public static final int text=0x7f02008a;
        public static final int text_selector=0x7f02008b;
        public static final int texture=0x7f02008c;
        public static final int texture2=0x7f02008d;
        public static final int thespian=0x7f02008e;
        public static final int thespian_events=0x7f02008f;
        public static final int thespian_events1=0x7f020090;
        public static final int thespian_events2=0x7f020091;
        public static final int thespian_events3=0x7f020092;
        public static final int thespian_events4=0x7f020093;
        public static final int unwind=0x7f020094;
        public static final int unwind_events1=0x7f020095;
        public static final int unwind_events2=0x7f020096;
        public static final int unwind_events3=0x7f020097;
        public static final int unwind_events4=0x7f020098;
        public static final int unwind_events5=0x7f020099;
        public static final int unwind_events6=0x7f02009a;
        public static final int whitering=0x7f02009b;
        public static final int writing_events=0x7f02009c;
        public static final int yeah_right=0x7f02009d;
        public static final int yell=0x7f02009e;
        public static final int zoomin=0x7f02009f;
        public static final int zoomout=0x7f0200a0;
    }
    public static final class id {
        public static final int Coord_Info=0x7f05003d;
        public static final int Ev1=0x7f050029;
        public static final int Ev2=0x7f05002a;
        public static final int Ev3=0x7f05002b;
        public static final int Ev4=0x7f05002c;
        public static final int Ev5=0x7f05002d;
        public static final int Ev6=0x7f05002e;
        public static final int Ev7=0x7f05002f;
        public static final int Ev8=0x7f050030;
        public static final int Events=0x7f05003a;
        public static final int Gallery01=0x7f050047;
        public static final int IconList=0x7f050018;
        public static final int ImageView01=0x7f050049;
        public static final int ImageView02=0x7f05004a;
        public static final int ImageView03=0x7f05004b;
        public static final int ImageView04=0x7f05004c;
        public static final int ImageView10=0x7f050052;
        public static final int ImageView11=0x7f050053;
        public static final int ImageView12=0x7f050054;
        public static final int ImageView13=0x7f050055;
        public static final int ImageView14=0x7f050056;
        public static final int ImageView15=0x7f050057;
        public static final int ImageView16=0x7f050058;
        public static final int ImageView17=0x7f050059;
        public static final int ImageView18=0x7f05005a;
        public static final int ImageView19=0x7f05005b;
        public static final int ImageView20=0x7f05005c;
        public static final int ImageView21=0x7f05005d;
        public static final int ImageView22=0x7f05005e;
        public static final int ImageView23=0x7f05005f;
        public static final int ImageView24=0x7f050060;
        public static final int ImageView25=0x7f050061;
        public static final int ImageView5=0x7f05004d;
        public static final int ImageView6=0x7f05004e;
        public static final int ImageView7=0x7f05004f;
        public static final int ImageView8=0x7f050050;
        public static final int ImageView9=0x7f050051;
        public static final int LinearLayout01=0x7f050064;
        public static final int Map=0x7f050039;
        public static final int ProShow=0x7f05003b;
        public static final int RelativeLayout01=0x7f050063;
        public static final int ScrollView01=0x7f050062;
        public static final int Sponsors=0x7f05003c;
        public static final int TextView01=0x7f050048;
        public static final int alignBounds=0x7f050002;
        public static final int alignMargins=0x7f050003;
        public static final int bottom=0x7f050005;
        public static final int center=0x7f05000c;
        public static final int center_horizontal=0x7f05000a;
        public static final int center_vertical=0x7f050008;
        public static final int clip_horizontal=0x7f05000f;
        public static final int clip_vertical=0x7f05000e;
        public static final int cltBtn=0x7f050044;
        public static final int coordlist=0x7f05007a;
        public static final int coordlist1=0x7f05007b;
        public static final int cordEvent=0x7f050015;
        public static final int cordname=0x7f050014;
        public static final int cordphone=0x7f050016;
        public static final int end=0x7f050011;
        public static final int eventDescription=0x7f050021;
        public static final int eventName=0x7f050012;
        public static final int event_category=0x7f05001b;
        public static final int fill=0x7f05000d;
        public static final int fill_horizontal=0x7f05000b;
        public static final int fill_vertical=0x7f050009;
        public static final int gcBtn=0x7f050041;
        public static final int horizontal=0x7f050000;
        public static final int hotel_distance=0x7f050033;
        public static final int hotel_listview=0x7f050036;
        public static final int hotel_name=0x7f050032;
        public static final int hotel_textview=0x7f050035;
        public static final int iconDescription=0x7f050013;
        public static final int icsrBtn=0x7f050043;
        public static final int imageView1=0x7f050022;
        public static final int imageView2=0x7f050023;
        public static final int imageView3=0x7f050024;
        public static final int imageView4=0x7f050025;
        public static final int imageView5=0x7f050026;
        public static final int imageView6=0x7f050027;
        public static final int imageView7=0x7f050028;
        public static final int imageView8=0x7f050031;
        public static final int introLabel=0x7f05001f;
        public static final int left=0x7f050006;
        public static final int libBtn=0x7f050042;
        public static final int linearLayout2=0x7f05001a;
        public static final int mapDisplay=0x7f05003e;
        public static final int myButton=0x7f050037;
        public static final int my_list=0x7f050017;
        public static final int oatBtn=0x7f050045;
        public static final int relativeLayout1=0x7f050019;
        public static final int right=0x7f050007;
        public static final int sacBtn=0x7f050046;
        public static final int search_menu=0x7f05007c;
        public static final int segmented_control=0x7f05001c;
        public static final int segmented_control_gen1=0x7f05001d;
        public static final int segmented_control_gen2=0x7f05001e;
        public static final int sort=0x7f050034;
        public static final int spons23=0x7f050079;
        public static final int sponsView1=0x7f050065;
        public static final int sponsView10=0x7f05006d;
        public static final int sponsView11=0x7f05006e;
        public static final int sponsView12=0x7f05006f;
        public static final int sponsView13=0x7f050070;
        public static final int sponsView14=0x7f050071;
        public static final int sponsView16=0x7f050072;
        public static final int sponsView17=0x7f050073;
        public static final int sponsView18=0x7f050074;
        public static final int sponsView19=0x7f050075;
        public static final int sponsView2=0x7f050066;
        public static final int sponsView20=0x7f050076;
        public static final int sponsView21=0x7f050077;
        public static final int sponsView22=0x7f050078;
        public static final int sponsView3=0x7f050067;
        public static final int sponsView5=0x7f050068;
        public static final int sponsView6=0x7f050069;
        public static final int sponsView7=0x7f05006a;
        public static final int sponsView8=0x7f05006b;
        public static final int sponsView9=0x7f05006c;
        public static final int start=0x7f050010;
        public static final int top=0x7f050004;
        public static final int tvName=0x7f050038;
        public static final int vert=0x7f050020;
        public static final int vertical=0x7f050001;
        public static final int zoomIn=0x7f050040;
        public static final int zoomOut=0x7f05003f;
    }
    public static final class layout {
        public static final int basic_event=0x7f030000;
        public static final int basic_icon=0x7f030001;
        public static final int coord_list_item=0x7f030002;
        public static final int coordlist=0x7f030003;
        public static final int departmentlayout=0x7f030004;
        public static final int event_description_layout=0x7f030005;
        public static final int events=0x7f030006;
        public static final int home_layout=0x7f030007;
        public static final int hospi_listview=0x7f030008;
        public static final int hospi_main=0x7f030009;
        public static final int hotel_main=0x7f03000a;
        public static final int image_holder=0x7f03000b;
        public static final int main=0x7f03000c;
        public static final int map=0x7f03000d;
        public static final int proshow=0x7f03000e;
        public static final int sponscategories=0x7f03000f;
        public static final int sponsfinal=0x7f030010;
    }
    public static final class menu {
        public static final int menu=0x7f090000;
        public static final int search_menu=0x7f090001;
    }
    public static final class string {
        public static final int app_name=0x7f070001;
        public static final int hello=0x7f070000;
    }
    public static final class style {
        public static final int ButtonText=0x7f080007;
        public static final int FirstText=0x7f080003;
        public static final int IconDescriptionText=0x7f080002;
        public static final int TextLabel=0x7f080008;
        public static final int button=0x7f080000;
        public static final int buttonText=0x7f080001;
        public static final int departmentpagetheme=0x7f080009;
        public static final int eventText=0x7f080005;
        public static final int headerText=0x7f080004;
        public static final int headerText_mainmenu2=0x7f080006;
    }
    public static final class styleable {
        /** Attributes that can be used with a Gallery1.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Gallery1_android_galleryItemBackground com.saarang:android_galleryItemBackground}</code></td><td></td></tr>
           </table>
           @see #Gallery1_android_galleryItemBackground
         */
        public static final int[] Gallery1 = {
            0x0101004c
        };
        /**
          <p>This symbol is the offset where the {@link com.saarang.R.attr#android_galleryItemBackground}
          attribute's value can be found in the {@link #Gallery1} array.
          @attr name android:android_galleryItemBackground
        */
        public static final int Gallery1_android_galleryItemBackground = 0;
        /** Attributes that can be used with a GridLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_alignmentMode com.saarang:alignmentMode}</code></td><td>
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins.</td></tr>
           <tr><td><code>{@link #GridLayout_columnCount com.saarang:columnCount}</code></td><td> The maximum number of columns to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_columnOrderPreserved com.saarang:columnOrderPreserved}</code></td><td>
        When set to true, forces column boundaries to appear in the same order
        as column indices.</td></tr>
           <tr><td><code>{@link #GridLayout_orientation com.saarang:orientation}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_rowCount com.saarang:rowCount}</code></td><td> The maximum number of rows to create when automatically positioning children.</td></tr>
           <tr><td><code>{@link #GridLayout_rowOrderPreserved com.saarang:rowOrderPreserved}</code></td><td>
        When set to true, forces row boundaries to appear in the same order
        as row indices.</td></tr>
           <tr><td><code>{@link #GridLayout_useDefaultMargins com.saarang:useDefaultMargins}</code></td><td>
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.</td></tr>
           </table>
           @see #GridLayout_alignmentMode
           @see #GridLayout_columnCount
           @see #GridLayout_columnOrderPreserved
           @see #GridLayout_orientation
           @see #GridLayout_rowCount
           @see #GridLayout_rowOrderPreserved
           @see #GridLayout_useDefaultMargins
         */
        public static final int[] GridLayout = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006
        };
        /**
          <p>
          @attr description
          
        When set to alignMargins, causes alignment to take place between the outer
        boundary of a view, as defined by its margins. When set to alignBounds,
        causes alignment to take place between the edges of the view.
        The default is alignMargins.
        See {@link android.widget.GridLayout#setAlignmentMode(int)}.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignBounds</code></td><td>0</td><td>
            Align the bounds of the children.
            See {@link android.widget.GridLayout#ALIGN_BOUNDS}.
            </td></tr>
<tr><td><code>alignMargins</code></td><td>1</td><td>
            Align the margins of the children.
            See {@link android.widget.GridLayout#ALIGN_MARGINS}.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:alignmentMode
        */
        public static final int GridLayout_alignmentMode = 4;
        /**
          <p>
          @attr description
           The maximum number of columns to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:columnCount
        */
        public static final int GridLayout_columnCount = 2;
        /**
          <p>
          @attr description
          
        When set to true, forces column boundaries to appear in the same order
        as column indices.
        The default is true.
        See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:columnOrderPreserved
        */
        public static final int GridLayout_columnOrderPreserved = 6;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        

        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td> Defines an horizontal widget. </td></tr>
<tr><td><code>vertical</code></td><td>1</td><td> Defines a vertical widget. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:orientation
        */
        public static final int GridLayout_orientation = 0;
        /**
          <p>
          @attr description
           The maximum number of rows to create when automatically positioning children. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rowCount
        */
        public static final int GridLayout_rowCount = 1;
        /**
          <p>
          @attr description
          
        When set to true, forces row boundaries to appear in the same order
        as row indices.
        The default is true.
        See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:rowOrderPreserved
        */
        public static final int GridLayout_rowOrderPreserved = 5;
        /**
          <p>
          @attr description
          
        When set to true, tells GridLayout to use default margins when none are specified
        in a view's layout parameters.
        The default value is false.
        See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:useDefaultMargins
        */
        public static final int GridLayout_useDefaultMargins = 3;
        /** Attributes that can be used with a GridLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_height com.saarang:android_layout_height}</code></td><td></td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_margin com.saarang:android_layout_margin}</code></td><td>
              Specifies extra space on the left, top, right and bottom
              sides of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginBottom com.saarang:android_layout_marginBottom}</code></td><td>
              Specifies extra space on the bottom side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginLeft com.saarang:android_layout_marginLeft}</code></td><td>
              Specifies extra space on the left side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginRight com.saarang:android_layout_marginRight}</code></td><td>
              Specifies extra space on the right side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_marginTop com.saarang:android_layout_marginTop}</code></td><td>
              Specifies extra space on the top side of this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_android_layout_width com.saarang:android_layout_width}</code></td><td>
              support versions.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_column com.saarang:layout_column}</code></td><td>
        The column boundary delimiting the left of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_columnSpan com.saarang:layout_columnSpan}</code></td><td>
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_gravity com.saarang:layout_gravity}</code></td><td>
        Gravity specifies how a component should be placed in its group of cells.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_row com.saarang:layout_row}</code></td><td> END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.</td></tr>
           <tr><td><code>{@link #GridLayout_Layout_layout_rowSpan com.saarang:layout_rowSpan}</code></td><td>
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.</td></tr>
           </table>
           @see #GridLayout_Layout_android_layout_height
           @see #GridLayout_Layout_android_layout_margin
           @see #GridLayout_Layout_android_layout_marginBottom
           @see #GridLayout_Layout_android_layout_marginLeft
           @see #GridLayout_Layout_android_layout_marginRight
           @see #GridLayout_Layout_android_layout_marginTop
           @see #GridLayout_Layout_android_layout_width
           @see #GridLayout_Layout_layout_column
           @see #GridLayout_Layout_layout_columnSpan
           @see #GridLayout_Layout_layout_gravity
           @see #GridLayout_Layout_layout_row
           @see #GridLayout_Layout_layout_rowSpan
         */
        public static final int[] GridLayout_Layout = {
            0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7,
            0x010100f8, 0x010100f9, 0x010100fa, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b
        };
        /**
          <p>This symbol is the offset where the {@link com.saarang.R.attr#android_layout_height}
          attribute's value can be found in the {@link #GridLayout_Layout} array.
          @attr name android:android_layout_height
        */
        public static final int GridLayout_Layout_android_layout_height = 1;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.saarang.R.attr#android_layout_margin}.
          @attr name android:android_layout_margin
        */
        public static final int GridLayout_Layout_android_layout_margin = 2;
        /**
          <p>
          @attr description
          
              Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.saarang.R.attr#android_layout_marginBottom}.
          @attr name android:android_layout_marginBottom
        */
        public static final int GridLayout_Layout_android_layout_marginBottom = 6;
        /**
          <p>
          @attr description
          
              Specifies extra space on the left side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.saarang.R.attr#android_layout_marginLeft}.
          @attr name android:android_layout_marginLeft
        */
        public static final int GridLayout_Layout_android_layout_marginLeft = 3;
        /**
          <p>
          @attr description
          
              Specifies extra space on the right side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.saarang.R.attr#android_layout_marginRight}.
          @attr name android:android_layout_marginRight
        */
        public static final int GridLayout_Layout_android_layout_marginRight = 5;
        /**
          <p>
          @attr description
          
              Specifies extra space on the top side of this view.
              This space is outside this view's bounds.
        
          <p>This corresponds to the global attribute          resource symbol {@link com.saarang.R.attr#android_layout_marginTop}.
          @attr name android:android_layout_marginTop
        */
        public static final int GridLayout_Layout_android_layout_marginTop = 4;
        /**
          <p>
          @attr description
          
              support versions. All attributes not present in MarginLayout are
              redefined in the support library name space.
        
 START MarginLayout layoutparams 
          <p>This corresponds to the global attribute          resource symbol {@link com.saarang.R.attr#android_layout_width}.
          @attr name android:android_layout_width
        */
        public static final int GridLayout_Layout_android_layout_width = 0;
        /**
          <p>
          @attr description
          
        The column boundary delimiting the left of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_column
        */
        public static final int GridLayout_Layout_layout_column = 9;
        /**
          <p>
          @attr description
          
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_columnSpan
        */
        public static final int GridLayout_Layout_layout_columnSpan = 10;
        /**
          <p>
          @attr description
          
        Gravity specifies how a component should be placed in its group of cells.
        The default is LEFT | BASELINE.
        See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td>
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td>
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
            </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:layout_gravity
        */
        public static final int GridLayout_Layout_layout_gravity = 11;
        /**
          <p>
          @attr description
           END MarginLayout layoutparams 

        The row boundary delimiting the top of the group of cells
        occupied by this view.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_row
        */
        public static final int GridLayout_Layout_layout_row = 7;
        /**
          <p>
          @attr description
          
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridLayout.Spec}.
        


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:layout_rowSpan
        */
        public static final int GridLayout_Layout_layout_rowSpan = 8;
    };
}
